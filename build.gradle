plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		url = "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		// location of the maven that hosts JEI files before January 2023
		name = "Progwml6's maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of the maven that hosts JEI files since January 2023
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		name = "KosmX's maven"
		url = 'https://maven.kosmx.dev/'
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
	}
	maven {
		url = "https://maven.shedaniel.me/"
	}
	maven {
		url = "https://maven.terraformersmc.com/releases/"
	}
	maven {
		url = "https://maven.blamejared.com"
	}
	maven {
		url = 'https://jitpack.io'
	}
	maven {
		url = "https://mvn.devos.one/releases/"
	}
	maven {
		url = "https://maven.nova-committee.cn/releases"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/immersive_guns.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation("maven.modrinth:jei:${project.jei_version}")
	modImplementation("maven.modrinth:shoulder-surfing-reloaded:${project.shoulder_surfing_reloaded_version}")
	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_animation_lib}")
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:core:${project.porting_lib_version}+${project.minecraft_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:tags:${project.porting_lib_version}+${project.minecraft_version}"))
	modImplementation(include("io.github.fabricators_of_create.Porting-Lib:entity:${project.porting_lib_version}+${project.minecraft_version}"))
	modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cardinal_components_api_version}"))
	modImplementation(include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_api_version}"))
	modImplementation(include("maven.modrinth:modernkeybinding:${project.modernkeybinding_version}"))

	modRuntimeOnly("maven.modrinth:moonlight:${project.moonlight_version}")
	modRuntimeOnly("maven.modrinth:mmmmmmmmmmmm:${project.mmmmmmmmmmmm_version}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forgeconfigapiport_version}"

	modCompileOnly "org.embeddedt:embeddium-1.20.1:${project.embeddedt_version}"
	modCompileOnly "maven.modrinth:iris:${project.iris_version}"
	modCompileOnly "maven.modrinth:carry-on:${project.carry_on_version}"
	modCompileOnly "maven.modrinth:immediatelyfast:${project.immediatelyfast_version}"
	modCompileOnly "maven.modrinth:zoomify:${project.zoomify_version}"

	// Apache Commons Math library for performing some interpolation operations
	include implementation(minecraftLibraries('org.apache.commons:commons-math3:3.6.1'))

	// 총기 제어에 사용되는 로직 및 애니메이션 상태 머신에 루아 스크립팅 언어를 도입한 LuaJ 라이브러리
	include implementation('com.github.286799714.luaj:luaj-jse:3.0.3')
	include implementation('com.github.286799714.luaj:luaj-core:3.0.3')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}